name: Build and Test Application with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions: write-all

jobs:
  build-test-docker:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew clean build --info -x test

    - name: Check if merge push
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: echo "Merge push event."

    - name: Set up QEMU
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v4
      with:
        context: .
        file: Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/msg-server:latest
        build-args: |
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_URI=${{ secrets.DB_URI }}
          DB_NAME=${{ secrets.DB_NAME }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          JWT_VALIDITY_TIME=${{ secrets.JWT_VALIDITY_TIME }}
          SEOUL_API_KEY=${{ secrets.SEOUL_API_KEY }}
          SK_API_KEY=${{ secrets.SK_API_KEY }}
